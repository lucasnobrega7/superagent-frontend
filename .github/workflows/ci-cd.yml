name: CI/CD Pipeline for Agentes de Conversão

on:
  push:
    branches: [main]
    paths:
      - 'functions/**'
  pull_request:
    branches: [main]
    paths:
      - 'functions/**'

jobs:
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./functions
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: './functions/package-lock.json'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run linting
        run: npm run lint
        
      - name: Run type checking
        run: npm run build
        
      - name: Run tests
        run: npm test
        
  build:
    name: Build and Deploy
    needs: lint-and-test
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./functions
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: './functions/package-lock.json'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build application
        run: npm run build:vercel
        env:
          # Definir variáveis de ambiente críticas para build
          NODE_ENV: production
          SUPERAGENT_API_URL: ${{ secrets.SUPERAGENT_API_URL }}
          LITERALAI_API_URL: ${{ secrets.LITERALAI_API_URL }}
          
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./functions
          vercel-args: '--prod'